{"version":3,"sources":["services/baseService.js","App.js","services/authService.js","reportWebVitals.js","index.js"],"names":["host","BaseService","window","location","hostname","baseUrl","url","includes","axios","create","baseURL","undefined","app_Key","process","REACT_APP_API_KEY","interceptors","request","use","config","app","createApp","apiKey","shopOrigin","shop","getSessionToken","then","token","headers","App","useState","message","setMessage","handleButton","a","post","res","catch","error","AppProvider","i18n","en","style","textAlign","margin","Button","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","params","URLSearchParams","search","get","ReactDOM","render","StrictMode","forceRedirect","document","getElementById"],"mappings":"6TAIIA,EAAO,KACPC,EAAc,KACI,qBAAXC,SACTF,EAAOE,OAAOC,SAASC,UAGzB,IAAIC,EAAU,WAAaL,EAAO,QAE9BM,EAAMN,GAAQA,EAAKO,SAAS,aADlB,6BAC2CF,EAKzD,GAJAJ,EAAcO,IAAMC,OAAO,CACzBC,QAASJ,SAGUK,UAAVT,OAAqB,CAE9B,IAAIU,EAAUC,mIAAYC,kBAE1Bb,EAAYc,aAAaC,QAAQC,KAAI,SAAUC,GAC7C,IAAMC,EAAMC,IAAU,CACpBC,OAAQT,EACRU,WAAYpB,OAAOqB,OAErB,OAAOC,0BAAgBL,GACpBM,MAAK,SAACC,GAGL,OADAR,EAAOS,QAAP,+BAA4CD,GACrCR,QAKAjB,Q,gDCGA2B,MA/Bf,WAAgB,IAAD,EACiBC,mBAAS,eAD1B,mBACNC,EADM,KACGC,EADH,KAGPC,EAAY,uCAAG,sBAAAC,EAAA,uDCRG3B,EDSA,cCRfL,EAAYiC,KAAK5B,EAAK,KDS1BmB,MAAK,SAACU,GACLJ,EAAW,kCAEZK,OAAM,SAACC,GACNN,EAAWM,MANI,iCCRhB,IAAmB/B,IDQH,OAAH,qDAUlB,OACE,cAACgC,EAAA,EAAD,CAAaC,KAAMC,EAAnB,SACE,sBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,QAA3C,UACE,cAACC,EAAA,EAAD,CACEC,QAAS,WACPb,KAFJ,oBAOA,uBACA,uBACA,4BAAIF,UEpBGgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,SCQRO,EAAS,IAAIC,gBAAgBrD,OAAOC,SAASqD,QACnDtD,OAAOqB,KAAO+B,EAAOG,IAAI,QAIzBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,WAAD,CACE1C,OAAQ,CACNG,OAAQR,mIAAYC,kBACpBQ,WAAYpB,OAAOqB,KACnBsC,eAAe,GAJnB,SAOE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BjB,M","file":"static/js/main.32231658.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { getSessionToken } from \"@shopify/app-bridge-utils\";\r\nimport createApp from \"@shopify/app-bridge\";\r\n\r\nvar host = null;\r\nvar BaseService = null;\r\nif (typeof window !== \"undefined\") {\r\n  host = window.location.hostname;\r\n}\r\n\r\nvar baseUrl = \"https://\" + host + \"/api/\";\r\nvar tempURL = \"http://localhost:8080/api/\";\r\nvar url = host && host.includes(\"localhost\") ? tempURL : baseUrl;\r\nBaseService = axios.create({\r\n  baseURL: url,\r\n});\r\n\r\nif (typeof window != undefined) {\r\n  // consle.log(\"process.env.REACT_APP_API_KEY\", process.env.NEXT_PUBLIC_API_KEY);\r\n  let app_Key = process.env.REACT_APP_API_KEY;\r\n\r\n  BaseService.interceptors.request.use(function (config) {\r\n    const app = createApp({\r\n      apiKey: app_Key,\r\n      shopOrigin: window.shop,\r\n    });\r\n    return getSessionToken(app) // requires an App Bridge instance\r\n      .then((token) => {\r\n        // append your request headers with an authenticated token\r\n        config.headers[\"Authorization\"] = `Bearer ${token}`;\r\n        return config;\r\n      });\r\n  });\r\n}\r\n\r\nexport default BaseService;\r\n","import \"./App.css\";\r\nimport * as AuthService from \"./services/authService\";\r\nimport { useState } from \"react\";\r\nimport { Button, AppProvider } from \"@shopify/polaris\";\r\nimport en from \"@shopify/polaris/locales/en.json\";\r\nimport \"@shopify/polaris/dist/styles.css\";\r\n\r\nfunction App() {\r\n  const [message, setMessage] = useState(\"Verifing...\");\r\n\r\n  const handleButton = async () => {\r\n    AuthService.verifyApp(\"/app/verify\", {})\r\n      .then((res) => {\r\n        setMessage(\"Application is working fine\");\r\n      })\r\n      .catch((error) => {\r\n        setMessage(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <AppProvider i18n={en}>\r\n      <div style={{ textAlign: \"center\", margin: \"30px\" }}>\r\n        <Button\r\n          onClick={() => {\r\n            handleButton();\r\n          }}\r\n        >\r\n          Verify\r\n        </Button>\r\n        <br />\r\n        <br />\r\n        <p>{message}</p>\r\n      </div>\r\n    </AppProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import BaseService from \"./baseService\";\r\n\r\nexport function verifyApp(url) {\r\n    return BaseService.post(url, {});\r\n}\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nimport { Provider } from \"@shopify/app-bridge-react\";\r\nimport \"@shopify/polaris/dist/styles.css\";\r\n\r\n//----------------------------------------------------------------------------------\r\n\r\n/**\r\n * get query parameters\r\n */\r\n\r\nconst params = new URLSearchParams(window.location.search);\r\nwindow.shop = params.get(\"shop\");\r\n\r\n//----------------------------------------------------------------------------------\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider\r\n      config={{\r\n        apiKey: process.env.REACT_APP_API_KEY,\r\n        shopOrigin: window.shop,\r\n        forceRedirect: true,\r\n      }}\r\n    >\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}